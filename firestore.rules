rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and update their own document.
    // They can create their own document upon signup.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }

    // Users can only read and create transactions linked to their own userId.
    match /transactions/{transactionId} {
      allow read, create: if request.auth.uid == request.resource.data.userId || request.auth.uid == resource.data.userId;
    }

    // Users can only read and create stakes linked to their own userId.
    match /stakes/{stakeId} {
      allow read, create: if request.auth.uid == request.resource.data.userId || request.auth.uid == resource.data.userId;
    }

    // Users can only read payouts that are directed to them.
    match /payouts/{payoutId} {
      allow read: if request.auth.uid == resource.data.toUserId;
      // Payouts are created on the server-side via Cloud Functions.
    }
    
    // Users can only read their own affiliate network members.
    match /affiliateNetworks/{userId}/{document=**} {
      allow read: if request.auth.uid == userId;
    }

    // Trading sessions are public and read-only for clients.
    match /tradingSessions/{sessionId} {
        allow read: if request.auth != null;
        // Bets are placed via API, not direct client write
        match /bets/{userId} {
            allow read: if request.auth != null;
            allow write: if false; // Disallow client writes
        }
    }

    // Global settings are read-only for all authenticated users.
    match /settings/global {
      allow read: if request.auth != null;
      allow write: if false; // Only backend can write
    }
  }
}
