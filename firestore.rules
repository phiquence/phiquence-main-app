
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read/update their own data. Anyone can create a user on signup.
    match /users/{userId} {
      allow read, update: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated();
    }

    // Allow users to read their own documents in subcollections
    match /users/{userId}/{subcollection}/{docId} {
        allow read: if isAuthenticated() && isOwner(userId);
    }
    
    // Global settings can be read by anyone, but not written to by clients
    match /settings/global {
        allow read: if true;
        allow write: if false; // Should only be changed from the Firebase Console
    }
    
    // Transactions: Users can only read their own transactions. Creation is handled by backend.
    match /transactions/{txId} {
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      allow create, update, delete: if false; // Handled by backend/admin
    }
    
    // Stakes: Users can only read their own stakes. Creation is handled by backend.
    match /stakes/{stakeId} {
       allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
       allow create, update, delete: if false; // Handled by backend/admin
    }
    
    // Payouts (Commissions): Users can only read payouts directed to them.
    match /payouts/{payoutId} {
        allow read: if isAuthenticated() && request.auth.uid == resource.data.toUserId;
        allow create, update, delete: if false; // Handled by backend/admin
    }

    // Affiliate Network: Users can only read their own network data.
    match /affiliateNetworks/{userId}/{subcollection}/{memberId} {
        allow read: if isAuthenticated() && isOwner(userId);
        allow create, update, delete: if false; // Handled by backend/admin
    }
    
    // Trading Sessions: Users can read session info. Bets are placed via backend.
    match /tradingSessions/{sessionId} {
        allow read: if isAuthenticated();
        // Bets are placed via the backend API, so direct client writes are disallowed.
        match /bets/{userId} {
             allow read: if isAuthenticated() && isOwner(userId);
             allow create, update, delete: if false; 
        }
    }
    
  }
}
