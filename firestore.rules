rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write to their own document. Anyone can create a user.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Public settings readable by anyone
    match /settings/global {
    	allow get: if true;
      allow write: if false; // Nobody can write from the client
    }
    
    // Stakes: Users can create and read their own stakes
    match /stakes/{stakeId} {
      // allow reading a list of stakes if the query is for the user's own stakes
      allow list: if request.auth != null && request.query.filters.userId == request.auth.uid;
      // allow reading a single stake doc if it belongs to the user
      allow get: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Stakes cannot be changed from client
    }
    
    // Transactions: Users can create and read their own transactions
    match /transactions/{transactionId} {
       allow list: if request.auth != null && request.query.filters.userId == request.auth.uid;
       allow get: if request.auth != null && resource.data.userId == request.auth.uid;
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
       allow update, delete: if false;
    }
    
     // Payouts: Users can only read payouts made to them
    match /payouts/{payoutId} {
        allow list: if request.auth != null && request.query.filters.toUserId == request.auth.uid;
        allow get: if request.auth != null && resource.data.toUserId == request.auth.uid;
        allow create, update, delete: if false; // Payouts are created by server
    }
    
    // Affiliate Network: Users can read their own network members
    match /affiliateNetworks/{userId}/members/{memberId} {
       allow list, get: if request.auth != null && request.auth.uid == userId;
       allow write: if false; // Managed by server
    }
    
    // Trading Sessions
    match /tradingSessions/{sessionId} {
      allow get: if request.auth != null; // Anyone can read session info
      
      // Bets: Users can create/update their own bet within a session
      match /bets/{userId} {
      	allow get: if request.auth != null && request.auth.uid == userId;
        allow create, update: if request.auth != null && request.auth.uid == userId;
        allow delete: if false;
      }
    }
  }
}
